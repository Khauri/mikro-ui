<layout tableOfContents=[{"value":"Theming","table":[{"value":"Quick Start","table":[]},{"value":"Theme Merging","table":[]}]}]><header as="h1">
  Theming
</header>
<text>
  Design systems makes it easy for teams of developers to create matching experiences without needing to think hard about if what they're creating matches the project goals.
</text>
<text>
  You can customize many aspects of mikro, such as color schemes, spacing, fonts, etc., in order to best match your design system and style guidelines.
</text>
<header as="h2">
  Quick Start
</header>
<text>
  Create a <code default=`theme.js` /> file somewhere in your project. This file will be where the theme lives for this tutorial, but you can just as easily load a JSON file stored in a database if you wanted to.
</text>
<codeblock default=`module.exports = {};` lang="null" />
<text>
  And now we can set the theme by passing it as the <code default=`theme` /> attribute of our provider.
</text>
<codeblock default=`<styled-provider>
  <!-- the rest of your page -->
</styled-provider>` lang="null" />
<header as="h2">
  Theme Merging
</header>
<text>
  Not only can themes be swapped out on the fly just by changing what's passed into the provider, you can also use multiple providers to merge as many themes as you want together.
</text>
<codeblock default=`$ {
  const lightMode = {
    colors: {"background": "white", "text": "black"},
  };

  const darkMode = {
    colors: {"background": "black", "text": "white"},
  };
}

<styled-provider theme=lightMode>
  <text> This text is in light mode. </text>
  <styled-provider theme=darkMode>
    <text> This text is in dark mode. </text>
  </styled-provider>
</styled-provider>` lang="null" />
<quote>
  <text>
      Note that this is just an example. You should really use layerStyles for this kind of thing.
  </text>
  
</quote>
<text>
  In fact, the theme you pass into the provider at the top is automatically merged with the base mikro theme. If you do not want this merging behavior then you can simply pass in <code default=`merge=false` /> to the provider, however this means that you will need to provide a complete theme configuration.
</text>
</layout>