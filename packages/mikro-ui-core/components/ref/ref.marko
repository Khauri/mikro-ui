<!-- 
  Marko deep freezes objects when you use them in a template.
  Sometimes this can be problematic when trying to work with dependency injected objects.
  This component is a workaround.

  Usage:
  <ref/objRef=(() => ({counter: 0})) />

  <p>Value: ${objRef().counter}</p>

  <lifecycle
    onMount() {
      this.timer = setInterval(() => {
        const obj = objRef();
        obj.counter += 1;
        objRef.forceUpdate();
      }, 1000);
    }
    onDestroy() {
      clearInterval(this.timer);
    }
  />
-->
import {Ref} from './ref';

<attrs/{default: value} />

<let/ref=(new Ref(
  value, 
  (newValue, newRef) => {
    // Force an update by assigning ref to its clone
    ref = newRef;
  }
)) />

<return=ref />
